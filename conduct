#!/usr/bin/env python3


import argcomplete
import argparse
import conduct_info
import conduct_load
import conduct_start
import conduct_version


# Main argument parser
parser = argparse.ArgumentParser()
subparsers = parser.add_subparsers(title='subcommands',
                                   description='valid subcommands',
                                   help='help for subcommands')


# Sub-parser for `version` sub-command
version_parser = subparsers.add_parser('version',
                                       help='print version information')
version_parser.set_defaults(func=conduct_version.version)


# Sub-parser for `info` sub-command
info_parser = subparsers.add_parser('info',
                                    help='get information about one or all bundles')
info_parser.set_defaults(func=conduct_info.info)


# Sub-parser for `load` sub-command
load_parser = subparsers.add_parser('load',
                                    help='load a bundle')
load_parser.add_argument('bundle',
                         help='The path to the bundle')
load_parser.add_argument('--nr-of-cpus',
                         type=int,
                         required=True,
                         help='The number of cpus required to run the bundle')
load_parser.add_argument('--memory',
                         type=int,
                         required=True,
                         help='The amount of memory required to run the bundle')
load_parser.add_argument('--disk-space',
                         type=int,
                         required=True,
                         help='The amount of disk space required to host an expanded bundle and configuration')
load_parser.add_argument('--configuration',
                         help='The optional configuration for the bundle')
load_parser.add_argument('--roles',
                         nargs='*',
                         default=[],
                         help='The optional roles of cluster nodes that this bundle can be deployed to, defaults to all roles')
load_parser.set_defaults(func=conduct_load.load)


# Sub-parser for `start` sub-command
start_parser = subparsers.add_parser('start',
                                     help='start a bundle')
start_parser.add_argument('--scale',
                          type=int,
                          default=1,
                          help='The optional number of executions, defaults to 1')
start_parser.add_argument('bundle',
                          help='The ID of the bundle')
start_parser.set_defaults(func=conduct_start.start)


# Parse arguments
argcomplete.autocomplete(parser)
args = parser.parse_args()
if vars(args).get("func") is None:
    parser.print_help()
else:
    args.func(args)
